// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
	Register(in =in, load=a1 ,out=a);
	Register(in=in, load=b1 ,out=b );
	Register(in=in, load=c1 ,out=c );
	Register(in=in, load=d1 ,out=d );
	Register(in=in, load=e1 ,out=e );
	Register(in=in, load=f1 ,out=f );
	Register(in=in, load=g1 ,out=g );
	Register(in=in, load=h1 ,out=h );
	
	Mux8Way16( a=a,b=b,c=c,d=d,e=e,f=f,g=g,h=h ,sel=address, out=out);
	
	DMux8Way(in=load,sel=address, a=a1,b=b1,c=c1,d=d1,e=e1,f=f1,g=g1,h=h1 );
	
}