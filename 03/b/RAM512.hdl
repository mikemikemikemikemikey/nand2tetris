// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Put your code here:
	DMux8Way(in=load,sel=address[6..8],a=a1,b=b1,c=c1,d=d1,e=e1,f=f1,g=g1,h=h1 );
	RAM64(in=in,load = a1, address = address[0..5], out = a);
	RAM64(in=in,load = b1, address = address[0..5], out = b);
	RAM64(in=in,load = c1, address = address[0..5], out = c);
	RAM64(in=in,load = d1, address = address[0..5], out = d);
	RAM64(in=in,load = e1, address = address[0..5], out = e);
	RAM64(in=in,load = f1, address = address[0..5], out = f);
	RAM64(in=in,load = g1, address = address[0..5], out = g);
	RAM64(in=in,load = h1, address = address[0..5], out = h);
	
	Mux8Way16( a=a,b=b,c=c,d=d,e=e,f=f,g=g,h=h ,sel=address[6..8], out=out);
}